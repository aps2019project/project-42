import com.google.gson.Gson;

import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class HeroAdder {
    public static void main(String[] args) throws IOException {
        Gson gson = new Gson();
        Scanner scanner = new Scanner(System.in);
        while (true) {
            ArrayList<Spell> spells = new ArrayList<>();
            System.out.println("name:");
            String name = scanner.nextLine();
            System.out.println("type of hero:");
            String typeOfHero=scanner.nextLine();
            System.out.println("id:");
            int ID=Integer.parseInt(scanner.nextLine());
            System.out.println("AP:");
            int AP = Integer.parseInt(scanner.nextLine());
            System.out.println("HP:");
            int HP = Integer.parseInt(scanner.nextLine());
            System.out.println("desc:");
            String desc = scanner.nextLine();
            System.out.println("price:");
            String price = scanner.nextLine();
            System.out.println("mana:");
            String mana = scanner.nextLine();
            System.out.println("num of spells:");
            int num = scanner.nextInt();
            for (int i = 0; i < num; i++) {
                ArrayList<String> turns = new ArrayList<>();
                ArrayList<String > locations=new ArrayList<>();
                System.out.println("targetsNumber:");
                String nfdgmjdr = scanner.nextLine();
                String targetNumber = scanner.nextLine();
                System.out.println("targetDistance:");
                String targetDistance = scanner.nextLine();
                System.out.println("effectQuantity:");
                String effectQuantity = scanner.nextLine();
                System.out.println("staticQuantity:");
                String staticQuantity = scanner.nextLine();
                System.out.println("index of time:");
                String time = scanner.nextLine();
                System.out.println("index of side:");
                String side = scanner.nextLine();
                System.out.println("index of effect:");
                String effect = scanner.nextLine();
                System.out.println("index of staticState");
                String staticState = scanner.nextLine();
                System.out.println("index of targetRange");
                String targetRange = scanner.nextLine();
                System.out.println("index of targetStatics");
                String targetStatics = scanner.nextLine();
                System.out.println("index of targetKind");
                String targetKind = scanner.nextLine();
                System.out.println("massacre:");
                String massacre = scanner.nextLine();
                System.out.println("immunity:");
                String immunity = scanner.nextLine();
                System.out.println("continuous:");
                String continuous=scanner.nextLine();
                System.out.println("choice");
                String choice = scanner.nextLine();
                System.out.println("goodness");
                String goodness = scanner.nextLine();
                System.out.println("eternity");
                String eternity = scanner.nextLine();
                System.out.println("num of turns:");
                int numt = scanner.nextInt();
                for (int j = 0; j < numt; j++) {
                    System.out.println("turns:");
                    String turn = scanner.nextLine();
                    turns.add(turn);
                }
                int row=scanner.nextInt();
                int column=scanner.nextInt();
                for (int j = 0; j < 2*row*column; j++) {
                    System.out.println("locations:");
                    String x = scanner.nextLine();
                    locations.add(x);
                }
                Spell spell = new Spell(targetNumber, targetDistance, effectQuantity, staticQuantity, time, side, effect, staticState, targetRange, targetStatics, targetKind, massacre, immunity, continuous,choice, goodness, eternity, turns, locations);
                spells.add(spell);
            }
            Hero hero = new Hero(name,typeOfHero,ID,AP,HP,desc,Integer.parseInt(price),Integer.parseInt(mana),spells);
            String jsonString = gson.toJson(hero);

            FileWriter fileWriter = new FileWriter("/home/dorna/IdeaProjects/project-42/Heroes/" + name + ".json");
            fileWriter.write(jsonString);
            fileWriter.close();
        }
    }
}

class Hero {
    String name;
    String typeOfHero;
    String desc;
    int ID;
    int price;
    int AP;
    int HP;
    int MP;
    ArrayList<Spell> spells;

    Hero(String name,String typeOfHero,int ID,int AP,int HP, String desc, int price, int MP, ArrayList<Spell> spells) {
        this.price = price;
        this.ID=ID;
        this.name = name;
        this.AP=AP;
        this.HP=HP;
        this.desc = desc;
        this.MP = MP;
        this.typeOfHero=typeOfHero;
        this.spells=spells;
    }
}